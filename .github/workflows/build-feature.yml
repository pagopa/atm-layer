name: Build everytime push or merge

on:
  push:
    branches:
      - '**'        # matches every branch

defaults:
  run:
    shell: bash

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write    # This is required for actions/checkout

jobs:
  build:
    strategy:
      matrix:
        environment: [dev]
    name: "build"
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@bdd914ff2423e2792c73475f11e8da603182f32d
        with:
          semantic_version: 18.0.0
          branches: |
           [
            '+([0-9])?(.{+([0-9]),x}).x',
            'main',
            {
              name: 'secrets',
              prerelease: true
            }
            ]
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.DOCKER_IMAGE_NAME}}
          IMAGE_TAG: ${{ steps.semantic_release.outputs.nextRelease.version }}
        run: |
          docker build -f src/main/docker/Dockerfile.native -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # - name: Get GitHub Releases
      #   id: get_releases
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: '' # Non specificare alcun file
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      # - name: Extract Release Versions
      #   id: extract_versions
      #   run: |
      #     echo "::set-output name=versions::$(echo '${{ steps.get_releases.outputs.releases }}' | jq -r '.[].tag_name')"
      #   shell: bash
        