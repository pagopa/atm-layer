name: Build and Deploy

# on:
#   push:
#     branches:
#       - '**'        # matches every branch
#       - '!main'     # excludes main
#       - '!master'     # excludes master

# defaults:
#   run:
#     shell: bash

# permissions:
#   id-token: write   # This is required for requesting the JWT
#   contents: read    # This is required for actions/checkout

# jobs:
#   build:
#     strategy:
#       matrix:
#         # environment: [dev, uat, prod]
#         environment: [dev]
#     name: "build"
#     runs-on: ubuntu-latest
#     environment: ${{ matrix.environment }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
#         with:
#           role-to-assume: ${{ secrets.IAM_ROLE }}
#           aws-region: ${{ vars.AWS_REGION }}

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v2

#       - name: Build, tag, and push docker image to Amazon ECR
#         env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: ${{ vars.DOCKER_IMAGE_NAME}}
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -f src/main/docker/Dockerfile.native -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#           docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

#       - name: Update Kubernetes Config
#         run: |
#           aws eks --region ${{ vars.AWS_REGION }} update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }}

#       - name: Install Helm
#         run: |
#           curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
#           chmod 700 get_helm.sh
#           ./get_helm.sh
          
#       - name: Upgrade Helm Chart
#         run: |
#           helm upgrade --install ${{ vars.HELM_CHART_NAME }} ${{ vars.HELM_CHART_FOLDER }}/ \
#           --namespace ${{ vars.KUBE_NAMESPACE }} \
#           -f helm-chart/environments/values-${{ matrix.environment }}.yaml \
#           --set image.tag=${{ github.sha }} \
#           --set image.repository=${{ steps.login-ecr.outputs.registry }}/${{ vars.DOCKER_IMAGE_NAME}} \
#           --set serviceAccount.name=${{ vars.DOCKER_IMAGE_NAME}} \
#           --set serviceAccount.namespace=${{ vars.KUBE_NAMESPACE }} \
#           --set ingress.hosts[0].paths[0].path=/${{ vars.DOCKER_IMAGE_NAME}}/
