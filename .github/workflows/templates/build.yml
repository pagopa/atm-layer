name: Build everytime push or merge

on:
  push:
    branches:
      - '**'        # matches every branch

defaults:
  run:
    shell: bash

permissions: write-all

jobs:
  build:
    strategy:
      matrix:
        environment: [dev]
    name: "build"
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2

      - name: Setup JDK
        uses: graalvm/setup-graalvm@2911b2304bee2c2f59b9a67bf45f025a6b6de4b1 # v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test and Integration tests
        run: |
          mvn test -Dquarkus.package.type=native -Dquarkus.application.name=atm-layer-model -Dquarkus.profile=prod ##########

      - name: Create Status check based on postman results
        id: process-postman
        uses: im-open/process-postman-test-results@4cc90df9ffdd1554366e19e759a15d008bdf3c39 # v2.1.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          results-file: src/test/resources/integration-test/output/result.json
          report-name: 'Postman build: ${{ github.run_number }}'
          create-status-check: true
          create-pr-comment: true
          update-comment-if-one-exists: true
          ignore-test-failures: true
          timezone: 'europe/rome'

      - name: Fail if there were errors in the postman tests
        if: steps.process-postman.outputs.test-outcome == 'Failed'
        run: |
          echo "There were postman failures."
          exit 1

      - name: Upload result.html
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
        with:
          name: html-report
          path: src/test/resources/integration-test/output/result.html

      - name: Build docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.DOCKER_IMAGE_NAME}}
          DOCKER_IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f src/main/docker/Dockerfile.native -t $REGISTRY/$REPOSITORY:$DOCKER_IMAGE_TAG .
